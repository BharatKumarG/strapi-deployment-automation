name: CD Pipeline

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
      INSTANCE_ID: ${{ secrets.INSTANCE_ID }}
      ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var "image_tag=${{ env.IMAGE_TAG }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "image_tag=${{ env.IMAGE_TAG }}"

      - name: Get EC2 Public IP from Terraform output
        id: ec2ip
        run: |
          IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_PUBLIC_IP=$IP" >> $GITHUB_ENV
          echo "Public IP: $IP"

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Deploy Docker Container on EC2 via SSM
        run: |
          ECR_IMAGE="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}"

          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying Strapi from ECR" \
            --targets "Key=instanceIds,Values=${{ env.INSTANCE_ID }}" \
            --parameters 'commands=[
              "aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com",
              "docker stop strapi || true",
              "docker rm strapi || true",
              "docker pull '${ECR_IMAGE}'",
              "docker run -d --name strapi -p 1337:1337 ${ECR_IMAGE}"
            ]' \
            --region ${{ env.AWS_REGION }}
